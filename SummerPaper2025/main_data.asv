clear;
close all;

addpath("C:\Users\kmiya\Documents\GitHub\J349554");

% File path
filename = 'J349554.xlsx';

% Read all data
data = readtable(filename);

% Convert from nominal to numeric if needed
% data.ER13040 = double(data.ER13040);  % uncomment if variables are stored as categorical

% List of years and corresponding inflation adjustment factors
years = [1999, 2001, 2003, 2005, 2007, 2009, 2011, 2013, 2015, 2017, 2019, 2021, 2023];

price_index = [61.833,	63.852	,66.355	,68.976,	70.715,	72.503,	74.360,	76.968	,79.712	,81.888,	83.320,	83.358,	84.478	,86.309	,88.308,	90.742,	93.536,	96.666,	100.000	,103.391,	106.915,	109.978	,112.744,	119.342,	128.362];
indx = [true false true false true false true false true false true false true false true false  true false  true false true false  true false true];
price_index = price_index(indx);

n = length(years);
own = cell(n,1);
value = cell(n,1);
moved = cell(n,1);
sold = cell(n,1);

% Variable roots and suffixes for each type
own_vars   = ["ER13040", "ER17043", "ER21042", "ER25028", "ER36028", "ER42029", "ER47329", "ER53029", "ER60030", "ER66030", "ER72030", "ER78031", "ER82032"];
value_vars = ["ER13041", "ER17044", "ER21043", "ER25029", "ER36029", "ER42030", "ER47330", "ER53030", "ER60031", "ER66031", "ER72031", "ER78032", "ER82033"];
moved_vars = ["ER13077", "ER17088", "ER21117", "ER25098", "ER36103", "ER42132", "ER47440", "ER53140", "ER60155", "ER66156", "ER72156", "ER78158", "ER82141"];
sold_vars  = ["ER15046", "ER19242", "ER22637", "ER26618", "ER37636", "ER43627", "ER48972", "ER54734", "ER61845", "ER67899", "ER73927", "ER80049", "ER84019"];

% Extract variables year by year
for i = 1:n
    yr = years(i);

    % Safely extract each variable
    own{i}   = data.(own_vars(i));
    value{i} = data.(value_vars(i)) / price_index(i);   % inflation-adjusted house value
    moved{i} = data.(moved_vars(i));
    sold{i}  = data.(sold_vars(i));
end

% Convert to a named table with year suffixes
housingData = table();
for i = 1:n
    suffix = num2str(years(i));
    housingData.(['own' suffix])   = own{i};
    housingData.(['value' suffix]) = value{i};
    housingData.(['moved' suffix]) = moved{i};
    housingData.(['sold' suffix])  = sold{i};
end

% Optional: Save as .mat file
save('psid_housing_clean.mat', 'housingData');


%% Filter

filterOwn01 = all([housingData.own99 == 1, housingData.own01 == 1],2);

housingDataOwnTemp = housingData(filterOwn01,:);
thr = .15;

%% 2001
filterSold01 = all([housingDataOwnTemp.moved01 == 1,housingDataOwnTemp.sold01 == 1],2);

dataTemp = housingDataOwnTemp(filterSold01,:);

% please check that housevalue variables are not missing 
filterAdj01 = any([abs(dataTemp.housevalue01./dataTemp.housevalue99) > 1+thr,...
    abs(dataTemp.housevalue01./dataTemp.housevalue99) < 1-thr],2);

dataTemp = dataTemp(filterAdj01,:);

sizeAdj01 = dataTemp.housevalue01./dataTemp.housevalue99;

%%
figure(1)
histogram([sizeAdj99;sizeAdj01],40,'BinEdges',[linspace(0,1-thr,20) linspace(1+thr,4,20)]);
title('Distribution of size of housing adjustment ')
xlabel('Size of Adjustment')
ylabel('Frequency')








